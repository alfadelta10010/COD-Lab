# add two double words using RVV32I

.data
a: .word 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF    #data i can declare as double word also , data can be declared as any type

# creating a variable 'a' such that the first two 32 bit numbers of it store the first 32-bits of the 2, 64-bit number(LSB part)
# and the next '2' 32-bit numbers  of 'a' represent the latter 2 32-bit numbers of both the numbers.  (MSB Part)

.text
la x9,a
lw x5,0(x9)
lw x6,4(x9)
lw x28,8(x9)
lw x29,12(x9)

add x7,x6,x5    # adding the two LSB 32- bit parts of the 64-bit number
sltu x31,x7,x6    # checking whether we have a carry


add x11,x28,x29    # adding the two msb 32-bit parts of 64-bit number 
add x12,x31,x11    # adding the carry generated by the lsb 32-bit part to msb 32-bit part
sltu x30,x12,x28    # checnking whether we have a final carry generated

# the final answer is [x12 x7] combined where x12 is the Msb 32-bits and x7 is the LSB 32 -bits 
# the final carry is stored in x30.